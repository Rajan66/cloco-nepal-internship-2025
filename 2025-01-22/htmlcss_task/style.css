/*** Important points to remember and improve on
1. rem: 1 rem equals to 16px 
2. use max-width instead of margin-left, right to center contents
3. bottom,top: 0 is required when using position sticky or fixed.
4. z-index: specifies the stack order of an element, greater stack order is always in front of an lower stack element (eg: z-index:2, z-index:-1)
***/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  /* 
    box-sizing defines how the width and height of an element are calculate; should the element includes padding and borders, or not.
    When using border-box, you don't have to worry about padding and borders adding extra space to the element's width or height 
  */
}

body {
  font-family: "Franklin Gothic Medium", "Arial Narrow", Arial, sans-serif;
  line-height: 1.5;
}

header {
  position: sticky;
  top: 0;
  background-color: darkcyan;
  padding: 1.5rem;
  color: white;
  z-index: 1;
}

nav {
  display: flex;
  align-items: center;
  justify-content: space-between;
  max-width: 1200px;
  margin: 0px auto;
}

nav ul {
  display: flex;
  list-style: none;
  gap: 4rem;
}

nav ul li:hover {
  color: aliceblue;
  font-size: 18px;
  transition: ease; 
  transition-duration: 200ms;
}

.hamburger {
  display: none; /* hide the hamburger and show the navbar in medium to large screens */
}

/* 
    grid-template-columns: 2fr 1fr; 
    first column takes 2 fraction of the available space while second column takes 1 fraction.
    total available space is divided into 3 parts (2fr + 1fr = 3fr)

    scenario:
        if the available space is 1200px, the calculations will be also follows:
            -> 1200/3 = 400px ( 400px per column) 
            -> 2 * 400 = 800px (800px for first column as it requires 2fr or 2/3) 
            -> 400px for the second column as it requires 1fr or 1/3)
*/
main {
  max-width: 1200px;
  margin: 2rem auto 5rem; /* top left-right bottom */
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: 2rem;
  padding: 2rem;
}

article {
  background-color: whitesmoke;
  border-radius: 10px;
  border: 1px solid rgb(219, 219, 219);
  padding: 1.8rem;
  position: relative;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

article h2,
p,
ul li {
  padding: 8px;
}

/* 
    grid-template-columns
        1. repeat: repeats columns
        2. auto-fit: will try to fit as many columns as possible
        3. minmax: one column being at least 250px wide
        4. 1fr: one fraction of the available space
    scenario:
        if the container is 1000px wide: 1000/250 = 4 columns
        the columns will grow upto 1 fraction each i.e 4 columns
        if it was 2fr, the element will take 500px each as 1000/2 = 500px
*/
.card-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  margin-top: 20px;
  gap: 2rem;
}

.card {
  padding: 20px;
  background-color: rgb(179, 215, 230);
  border-radius: 10px;
  border: 1px solid rgb(110, 146, 161);
}

.image-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-top: 2rem;
}

/* default, show 1 columns for small screens */
.gallery {
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  gap: 2rem;
}

.image {
  width: 100%;
  border-radius: 10px;
}

.sticky-sidebar {
  background-color: whitesmoke;
  position: sticky;
  height: fit-content;
  border-radius: 8px;
  border: 1px solid rgb(219, 219, 219);
  padding: 1.5rem;
  top: 6rem;
}

.badge {
  background-color: rgb(238, 42, 42);
  color: white;
  opacity: 90%;
  border-radius: 50%;
  padding: 10px;
  height: 80px;
  width: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: -30px;
  right: -30px;
}

footer {
  position: fixed;
  bottom: 0;
  background-color: darkcyan;
  color: white;
  width: 100%;
  padding: 1rem;
  margin-top: 4rem;
}

.footer-content {
  max-width: 1200px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 0 auto;
}

@media (max-width: 768px) {
  main {
    grid-template-columns: 1fr;
  }
  nav ul {
    display: none;
    flex-direction: column;
    align-items: center;
  }

  .hamburger {
    display: block; /* display the hamburger on phone */
  }

  .hamburger img {
    width: 50px;
    height: 50px;
  }

  .btn-hamburger {
    all: unset; /* removes the button styles (border, background-color etc) */
  }

  .btn-hamburger:hover {
    cursor: pointer;
  }
}

/*
    show 2 columns for medium screens 
    divides the avaible pixel to two columns,
    if 600px is available, 600/2 = 300px per column
*/
@media (min-width: 768px) {
  .gallery {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* show 3 columns for large screens */
@media (min-width: 992px) {
  .gallery {
    grid-template-columns: repeat(3, 1fr);
  }
}
